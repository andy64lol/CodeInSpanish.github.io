function convertirPitonAPython(customCode) {
    const replacements = {
        // Palabras clave básicas
        'funcion': 'def',
        'fin funcion': '',
        'si': 'if',
        'entonces': '',
        'sino': 'else',
        'fin si': '',
        'para': 'for',
        'en': 'in',
        'hacer': '',
        'fin hacer': '',
        'mientras': 'while',
        'fin mientras': '',
        'retornar': 'return',
        'imprimir': 'print',
        'verdadero': 'True',
        'falso': 'False',
        'nulo': 'None',
        'y': 'and',
        'o': 'or',
        'no': 'not',
        'es': 'is',
        'no es': 'is not',
        'intentar': 'try',
        'capturar': 'except',
        'finalmente': 'finally',
        'levantar': 'raise',
        'clase': 'class',
        'importar': 'import',
        'desde': 'from',
        'como': 'as',
        'con': 'with',
        'pasar': 'pass',
        'continuar': 'continue',
        'romper': 'break',
        'global': 'global',
        'no local': 'nonlocal',
        'lambda': 'lambda',
        'generador': 'yield',
        'asercion': 'assert',
        'asincrono': 'async',
        'esperar': 'await',

        // Tipos de datos
        'cadena': 'str',
        'entero': 'int',
        'flotante': 'float',
        'lista': 'list',
        'tupla': 'tuple',
        'conjunto': 'set',
        'diccionario': 'dict',
        'booleano': 'bool',
        'bytes': 'bytes',
        'bytearray': 'bytearray',
        'complejo': 'complex',
        'rango': 'range',
        'enumerar': 'enumerate',
        'zip': 'zip',
        'mapa': 'map',
        'filtro': 'filter',
        'reducir': 'reduce',
        'reversa': 'reversed',
        'ordenado': 'sorted',
        'abrir': 'open',
        'cerrar': 'close',
        'leer': 'read',
        'escribir': 'write',
        'iterar': 'iter',
        'siguiente': 'next',

        // Métodos de cadenas
        'mayusculas': 'upper',
        'minusculas': 'lower',
        'capitalizar': 'capitalize',
        'titulo': 'title',
        'reemplazar': 'replace',
        'dividir': 'split',
        'unir': 'join',
        'eliminar espacios': 'strip',
        'buscar': 'find',
        'contar': 'count',
        'inicia con': 'startswith',
        'termina con': 'endswith',
        'es alfanumerico': 'isalnum',
        'es alfabetico': 'isalpha',
        'es digito': 'isdigit',
        'es espacio': 'isspace',
        'formatear': 'format',

        // Métodos de listas
        'agregar': 'append',
        'extender': 'extend',
        'insertar': 'insert',
        'eliminar': 'remove',
        'pop': 'pop',
        'limpiar': 'clear',
        'indice': 'index',
        'contar': 'count',
        'ordenar': 'sort',
        'reversa': 'reverse',
        'copiar': 'copy',

        // Métodos de diccionarios
        'obtener': 'get',
        'claves': 'keys',
        'valores': 'values',
        'items': 'items',
        'actualizar': 'update',
        'eliminar clave': 'pop',
        'eliminar ultimo': 'popitem',

        // Operadores y símbolos
        'mas': '+',
        'menos': '-',
        'por': '*',
        'dividido': '/',
        'div entera': '//',
        'modulo': '%',
        'potencia': '**',
        'igual': '==',
        'no igual': '!=',
        'mayor': '>',
        'menor': '<',
        'mayor igual': '>=',
        'menor igual': '<=',
        'en': 'in',
        'no en': 'not in',
        'es': 'is',
        'no es': 'is not',
        'bitwise and': '&',
        'bitwise or': '|',
        'bitwise xor': '^',
        'bitwise not': '~',
        'shift izquierda': '<<',
        'shift derecha': '>>',

        // Módulos estándar
        'matematicas': 'math',
        'aleatorio': 'random',
        'sistema': 'sys',
        'os': 'os',
        'tiempo': 'time',
        'fecha': 'datetime',
        'json': 'json',
        'expresiones regulares': 're',
        'colecciones': 'collections',
        'ruta': 'pathlib',
        'subprocesos': 'subprocess',
        'logging': 'logging',
        'argumentos': 'argparse',
        'itertools': 'itertools',
        'functools': 'functools',
        'hilos': 'threading',
        'multiprocesamiento': 'multiprocessing',
        'asyncio': 'asyncio',
        'socket': 'socket',
        'http': 'http',
        'urllib': 'urllib',
        'csv': 'csv',
        'sqlite3': 'sqlite3',
        'hashlib': 'hashlib',
        'zlib': 'zlib',
        'base64': 'base64',
        'struct': 'struct',
        'pickle': 'pickle',
        'copy': 'copy',
        'enum': 'enum',
        'abc': 'abc',
        'tipado': 'typing',
        'dataclasses': 'dataclasses',
        'contextlib': 'contextlib',
        'unittest': 'unittest',
        'pdb': 'pdb',
        'traceback': 'traceback',
        'inspect': 'inspect',
        'ast': 'ast',
        'dis': 'dis',
        'gc': 'gc',
        'weakref': 'weakref',
        'atexit': 'atexit',
        'signal': 'signal',
        'select': 'select',
        'ssl': 'ssl',
        'uuid': 'uuid',
        'ipaddress': 'ipaddress',
        'html': 'html',
        'xml': 'xml',
        'email': 'email',
        'configparser': 'configparser',
        'getpass': 'getpass',
        'readline': 'readline',
        'rlcompleter': 'rlcompleter',
        'cmd': 'cmd',
        'shlex': 'shlex',
        'glob': 'glob',
        'fnmatch': 'fnmatch',
        'linecache': 'linecache',
        'tempfile': 'tempfile',
        'mmap': 'mmap',
        'codecs': 'codecs',
        'unicodedata': 'unicodedata',
        'string': 'string',
        'textwrap': 'textwrap',
        'difflib': 'difflib',
        're': 're',
        'struct': 'struct',
        'binascii': 'binascii',
        'array': 'array',
        'queue': 'queue',
        'heapq': 'heapq',
        'bisect': 'bisect',
        'weakref': 'weakref',
        'copy': 'copy',
        'pprint': 'pprint',
        'reprlib': 'reprlib',
        'enum': 'enum',
        'types': 'types',
        'inspect': 'inspect',
        'ast': 'ast',
        'dis': 'dis',
        'gc': 'gc',
        'atexit': 'atexit',
        'signal': 'signal',
        'select': 'select',
        'ssl': 'ssl',
        'uuid': 'uuid',
        'ipaddress': 'ipaddress',
        'html': 'html',
        'xml': 'xml',
        'email': 'email',
        'configparser': 'configparser',
        'argparse': 'argparse',
        'getpass': 'getpass',
        'readline': 'readline',
        'rlcompleter': 'rlcompleter',
        'cmd': 'cmd',
        'shlex': 'shlex',
        'glob': 'glob',
        'fnmatch': 'fnmatch',
        'linecache': 'linecache',
        'tempfile': 'tempfile',
        'mmap': 'mmap',
        'codecs': 'codecs',
        'unicodedata': 'unicodedata',
        'string': 'string',
        'textwrap': 'textwrap',
        'difflib': 'difflib',
        're': 're',
        'struct': 'struct',
    };

    let pythonCode = customCode;
    
    // Reemplazar palabras clave
    Object.entries(replacements).forEach(([pit, pyt]) => {
        const regex = new RegExp(`\\b${pit}\\b`, 'g');
        pythonCode = pythonCode.replace(regex, pyt);
    });

    // Manejo de bloques y estructura
    pythonCode = pythonCode
        .replace(/entonces:/g, ':')
        .replace(/hacer:/g, ':')
        .replace(/fin\s+(\w+)/g, '')
        .replace(/(\s*):\s*$/gm, '$1')
        .replace(/importar (\w+)/g, 'import $1');

    return pythonCode;
}

window.convertirPitonAPython = convertirPitonAPython;
